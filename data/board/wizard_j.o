#/std/bboard.c
dbase (["no_get":1,"no_reset":1,"capacity":49,"name":"意见交流板","location":"/d/wiz/jobroom","board_id":"wizard_j","long":"这是一个专门为玩家和管理人员沟通的意见板。","id":"idea board","notes":({(["author":"昌十二(test)","title":"math robot","time":927928747,"msg":"// Last Modified : Fri May 28 17:57:22 1999#include <stdio.h>char result[]=\"(1+(2+(4+5)))\";char oper[4]=\"+-*/\";int Oper(int o, int a, int b){    switch(o)    {    case 0: return a+b;    case 1: return a-b;    case 2: return a*b;    case 3: if(b!=0) return a/b; else return -10000;    default: printf(\"Error\");    }}int Calc24(int a, int b, int c, int d){    int i, j, k;    for(i=0;i<4;i++)        for(j=0;j<4;j++)            for(k=0;k<4;k++)                if(Oper(k, a, Oper(j, b, Oper(i, c, d)))==24)                    goto l_gotit;    //No solution    return 0; l_gotit:    result[1]=a+'0';    result[2]=oper[k];    result[4]=b+'0';    result[5]=oper[j];    result[7]=c+'0';    result[8]=oper[i];    result[9]=d+'0';    return 1;}int Permute(int a, int b, int c, int d){    if(Calc24(a,b,c,d)) return 1;    if(Calc24(a,b,d,c)) return 1;    if(Calc24(a,c,b,d)) return 1;    if(Calc24(a,c,d,b)) return 1;    if(Calc24(a,d,b,c)) return 1;    if(Calc24(a,d,c,b)) return 1;    if(Calc24(b,a,c,d)) return 1;    if(Calc24(b,a,d,c)) return 1;    if(Calc24(b,c,a,d)) return 1;    if(Calc24(b,c,d,a)) return 1;    if(Calc24(b,d,a,c)) return 1;    if(Calc24(b,d,c,a)) return 1;    if(Calc24(c,a,b,d)) return 1;    if(Calc24(c,a,d,b)) return 1;    if(Calc24(c,b,a,d)) return 1;    if(Calc24(c,b,d,a)) return 1;    if(Calc24(c,d,a,b)) return 1;    if(Calc24(c,d,b,a)) return 1;    if(Calc24(d,a,b,c)) return 1;    if(Calc24(d,a,c,b)) return 1;    if(Calc24(d,b,a,c)) return 1;    if(Calc24(d,b,c,a)) return 1;    if(Calc24(d,c,a,b)) return 1;    if(Calc24(d,c,b,a)) return 1;    printf(\"say No solution!\\n\");    return 0;}   int GetNumber(char *buffer){    nosave char numbers[20]=\"   $(AR;6~H}KDNeAyF_0K>E (B\";    int i;    for(i=1;i<10;i++)        if(buffer[0]==numbers[i*2] && buffer[1]==numbers[i*2+1])            return i;    printf(\"Unknown number\\n\");    return -1;}void main(){    char buffer[100];        scanf(\"%s\",buffer);//    printf(\"Got buffer:%s\\n\",buffer);               Permute(GetNumber(buffer),            GetNumber(buffer+3),            GetNumber(buffer+6),            GetNumber(buffer+9));    printf(\"answer %s\\n\",result);}",]),}),])
